@page "/"
@using BlazorIntAuto.Data
@inject HttpClient Http
@using BlazorTooltips
@using System.Text.Json
@inject IModalService modal
@inject ILogger<Home> Logger

<PageTitle>Home</PageTitle>
<AuthorizeView>
  <Authorized>
    <table class="table">
      <tbody>
        @foreach (var claim in context.User.Claims)
        {
          <tr>
            <td>@claim.Type - @claim.Value</td>
          </tr>
        }
      </tbody>
    </table>
    <div>
      <h1>Dashboard</h1>
    </div>
    @if (dashboardImages == null)
    {
      <h1>Loading dashboard images...</h1>
    }
    else
    {
      @foreach (var image in dashboardImages)
      {
        <div>
          <img src="@image.Image" asp-append-version="true" width="300px" />
          <Tooltip Title="Details tooltip"
                   Placement="TooltipPlacement.Bottom"
                   Animation="true">
            <button type="btn btn-primary" class="btn btn-primary">Details</button>
          </Tooltip>
        </div>

      }
    }
  </Authorized>
  <NotAuthorized>
    <h1>Hello!</h1>

    Please login to view Dashboard.
  </NotAuthorized>
</AuthorizeView>

<AuthorizeView Roles="Administrator">
  Only Administrators can see this.
</AuthorizeView>

@code {
  private DashboardImage[] dashboardImages = null;

  [CascadingParameter]
  private Task<AuthenticationState> authStateTask { get; set; }

  protected override async Task OnInitializedAsync()
  {
    base.OnInitialized();

    try
    {
      var authstate = await authStateTask;

      if (authstate.User.Claims.FirstOrDefault() != null)
      {
        var images = System.IO.File.ReadAllText($"{System.IO.Directory.GetCurrentDirectory()}{@"\wwwroot\data\dashboardimages.json"}");

        if (images!=null)
        {
          dashboardImages = JsonSerializer.Deserialize<DashboardImage[]>(images);

          Logger.LogInformation(images);
        }
      }
    }
    catch (Exception ex)
    {
      Logger.LogError(ex.Message);
    }
  }
}
